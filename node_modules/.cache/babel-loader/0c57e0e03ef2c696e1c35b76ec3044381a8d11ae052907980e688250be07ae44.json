{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAIcqoJV7Ow9HEe0ICwB6tQfhAUkLap7VM\",\n  authDomain: \"crwn-clothing-db-f4767.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-f4767\",\n  storageBucket: \"crwn-clothing-db-f4767.appspot.com\",\n  messagingSenderId: \"583090366211\",\n  appId: \"1:583090366211:web:2abe30445a290b580eab36\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst usersCollection = db.collection('users');\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\n// export const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd, field) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.data());\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userSnapshot;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(auth, userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","db","firebase","firestore","usersCollection","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","addCollectionAndDocuments","collectionKey","objectsToAdd","field","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","docs","map","docSnapshot","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","getCurrentUser","Promise","resolve","reject","unsubscribe"],"sources":["/Users/carbonara/Desktop/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAIcqoJV7Ow9HEe0ICwB6tQfhAUkLap7VM\",\n  authDomain: \"crwn-clothing-db-f4767.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-f4767\",\n  storageBucket: \"crwn-clothing-db-f4767.appspot.com\",\n  messagingSenderId: \"583090366211\",\n  appId: \"1:583090366211:web:2abe30445a290b580eab36\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst usersCollection = db.collection('users');\n\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\n// export const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd,\n  field\n) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log('done');\n};\n\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map((docSnapshot) => docSnapshot.data());\n};\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userSnapshot;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) =>\n  onAuthStateChanged(auth, callback);\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(auth, (userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}