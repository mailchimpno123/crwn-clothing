{"ast":null,"code":"var _jsxFileName = \"/Users/carbonara/Desktop/crwn-clothing/src/context/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingItem = cartItems.find(item => item.id === productToAdd.id);\n  if (existingItem) {\n    return cartItems.map(item => item.id === productToAdd.id ? {\n      ...item,\n      quantity: item.quantity + 1\n    } : item);\n  } else {\n    return [...cartItems, {\n      ...productToAdd,\n      quantity: 1\n    }];\n  }\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  toggleCart: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, item) => total + item.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]); // This is a dependency array. It tells useEffect to run when cartItems changes.\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    addItemToCart,\n    cartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingItem","find","item","id","map","quantity","CartContext","isCartOpen","toggleCart","addItemToCart","cartCount","CartProvider","children","setIsCartOpen","setCartItems","setCartCount","newCartCount","reduce","total","value"],"sources":["/Users/carbonara/Desktop/crwn-clothing/src/context/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => { \n    const existingItem = cartItems.find(item => item.id === productToAdd.id);\n    if (existingItem) {\n        return cartItems.map(item => item.id === productToAdd.id ? {...item, quantity: item.quantity + 1} : item);\n    } else {\n        return [...cartItems, {...productToAdd, quantity: 1}];\n    }\n}\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    toggleCart: () => {},\n    cartItems: [],\n    addItemToCart: () => {},\n    cartCount : 0\n});\n\nexport const CartProvider = ({ children }) => {\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [cartItems, setCartItems] = useState([]);\n    const [cartCount, setCartCount] = useState(0);\n\n    useEffect(() => {\n        const newCartCount = cartItems.reduce((total, item) => total + item.quantity, 0);\n        setCartCount(newCartCount);\n    }, [cartItems]); // This is a dependency array. It tells useEffect to run when cartItems changes.\n\n\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd));\n    }\n\n    const value = { isCartOpen, setIsCartOpen, cartItems, addItemToCart, cartCount };\n    \n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n}\n    "],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE3D,MAAMC,WAAW,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EAC7C,MAAMC,YAAY,GAAGF,SAAS,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,CAAC;EACxE,IAAIH,YAAY,EAAE;IACd,OAAOF,SAAS,CAACM,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAAG;MAAC,GAAGD,IAAI;MAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;IAAC,CAAC,GAAGH,IAAI,CAAC;EAC7G,CAAC,MAAM;IACH,OAAO,CAAC,GAAGJ,SAAS,EAAE;MAAC,GAAGC,YAAY;MAAEM,QAAQ,EAAE;IAAC,CAAC,CAAC;EACzD;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAAC;EACrCa,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,MAAM,CAAC,CAAC;EACpBV,SAAS,EAAE,EAAE;EACbW,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBC,SAAS,EAAG;AAChB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACrC,MAAM,CAACL,UAAU,EAAEM,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACG,SAAS,EAAEgB,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,SAAS,EAAEK,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,MAAMoB,YAAY,GAAGlB,SAAS,CAACmB,MAAM,CAAC,CAACC,KAAK,EAAEhB,IAAI,KAAKgB,KAAK,GAAGhB,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC;IAChFU,YAAY,CAACC,YAAY,CAAC;EAC9B,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAGjB,MAAMW,aAAa,GAAIV,YAAY,IAAK;IACpCe,YAAY,CAACjB,WAAW,CAACC,SAAS,EAAEC,YAAY,CAAC,CAAC;EACtD,CAAC;EAED,MAAMoB,KAAK,GAAG;IAAEZ,UAAU;IAAEM,aAAa;IAAEf,SAAS;IAAEW,aAAa;IAAEC;EAAU,CAAC;EAEhF,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAES,KAAM;IAAA,UAAEP;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAChF,CAAC;AAAA,GAlBYD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}