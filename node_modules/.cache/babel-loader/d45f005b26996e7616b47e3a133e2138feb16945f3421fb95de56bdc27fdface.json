{"ast":null,"code":"var _jsxFileName = \"/Users/carbonara/Desktop/crwn-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useReducer } from 'react';\nimport { createAction } from '../utils/reducer/reducer.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [{\n    cartCount,\n    cartTotal,\n    cartItems\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n  const updateCartItemsReducer = cartItems => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal\n    };\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  };\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n  const removeItemToCart = cartItemToRemove => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"Pi96wqJ5DC/xVGqzCIB7CytznYc=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useReducer","createAction","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CartProvider","children","dispatch","cartReducer","INITIAL_STATE","updateCartItemsReducer","newCartCount","reduce","total","newCartTotal","price","payload","CART_ACTION_TYPES","SET_CART_ITEMS","newCartItems","removeItemToCart","value"],"sources":["/Users/carbonara/Desktop/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useReducer } from 'react';\n\nimport { createAction } from '../utils/reducer/reducer.utils';\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\n\n\n\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  const [{ cartCount, cartTotal, cartItems }, dispatch] = useReducer(\n    cartReducer,\n    INITIAL_STATE\n  );\n\n  const updateCartItemsReducer = (cartItems) => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n\n    const newCartTotal = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal,\n    };\n\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  };\n\n  const addItemToCart = (productToAdd) => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemToCart = (cartItemToRemove) => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = (cartItemToClear) => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAE3D,SAASC,YAAY,QAAQ,gCAAgC;AAAC;AAE9D,MAAMC,WAAW,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EAC/C,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CACpCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,CAC9C;EAED,IAAIH,gBAAgB,EAAE;IACpB,OAAOF,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAC3B;MAAE,GAAGD,QAAQ;MAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;IAAE,CAAC,GAChDH,QAAQ,CACb;EACH;EAEA,OAAO,CAAC,GAAGJ,SAAS,EAAE;IAAE,GAAGC,YAAY;IAAEM,QAAQ,EAAE;EAAE,CAAC,CAAC;AACzD,CAAC;AAED,MAAMC,cAAc,GAAG,CAACR,SAAS,EAAES,gBAAgB,KAAK;EACtD;EACA,MAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CACpCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKI,gBAAgB,CAACJ,EAAE,CAClD;;EAED;EACA,IAAIH,gBAAgB,CAACK,QAAQ,KAAK,CAAC,EAAE;IACnC,OAAOP,SAAS,CAACU,MAAM,CAAEN,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKI,gBAAgB,CAACJ,EAAE,CAAC;EAC5E;;EAEA;EACA,OAAOL,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKI,gBAAgB,CAACJ,EAAE,GAC/B;IAAE,GAAGD,QAAQ;IAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;EAAE,CAAC,GAChDH,QAAQ,CACb;AACH,CAAC;AAMD,MAAMO,aAAa,GAAG,CAACX,SAAS,EAAEY,eAAe,KAC/CZ,SAAS,CAACU,MAAM,CAAEN,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKO,eAAe,CAACP,EAAE,CAAC;AAEpE,OAAO,MAAMQ,WAAW,gBAAGlB,aAAa,CAAC;EACvCmB,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBf,SAAS,EAAE,EAAE;EACbgB,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBC,kBAAkB,EAAE,MAAM,CAAC,CAAC;EAC5BC,iBAAiB,EAAE,MAAM,CAAC,CAAC;EAC3BC,SAAS,EAAE,CAAC;EACZC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACR,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAAC;IAAEuB,SAAS;IAAEC,SAAS;IAAEpB;EAAU,CAAC,EAAEuB,QAAQ,CAAC,GAAG1B,UAAU,CAChE2B,WAAW,EACXC,aAAa,CACd;EAED,MAAMC,sBAAsB,GAAI1B,SAAS,IAAK;IAC5C,MAAM2B,YAAY,GAAG3B,SAAS,CAAC4B,MAAM,CACnC,CAACC,KAAK,EAAEzB,QAAQ,KAAKyB,KAAK,GAAGzB,QAAQ,CAACG,QAAQ,EAC9C,CAAC,CACF;IAED,MAAMuB,YAAY,GAAG9B,SAAS,CAAC4B,MAAM,CACnC,CAACC,KAAK,EAAEzB,QAAQ,KAAKyB,KAAK,GAAGzB,QAAQ,CAACG,QAAQ,GAAGH,QAAQ,CAAC2B,KAAK,EAC/D,CAAC,CACF;IAED,MAAMC,OAAO,GAAG;MACdhC,SAAS;MACTmB,SAAS,EAAEQ,YAAY;MACvBP,SAAS,EAAEU;IACb,CAAC;IAEDP,QAAQ,CAACzB,YAAY,CAACmC,iBAAiB,CAACC,cAAc,EAAEF,OAAO,CAAC,CAAC;EACnE,CAAC;EAED,MAAMhB,aAAa,GAAIf,YAAY,IAAK;IACtC,MAAMkC,YAAY,GAAGpC,WAAW,CAACC,SAAS,EAAEC,YAAY,CAAC;IACzDyB,sBAAsB,CAACS,YAAY,CAAC;EACtC,CAAC;EAED,MAAMC,gBAAgB,GAAI3B,gBAAgB,IAAK;IAC7C,MAAM0B,YAAY,GAAG3B,cAAc,CAACR,SAAS,EAAES,gBAAgB,CAAC;IAChEiB,sBAAsB,CAACS,YAAY,CAAC;EACtC,CAAC;EAED,MAAMjB,iBAAiB,GAAIN,eAAe,IAAK;IAC7C,MAAMuB,YAAY,GAAGxB,aAAa,CAACX,SAAS,EAAEY,eAAe,CAAC;IAC9Dc,sBAAsB,CAACS,YAAY,CAAC;EACtC,CAAC;EAED,MAAME,KAAK,GAAG;IACZvB,UAAU;IACVC,aAAa;IACbC,aAAa;IACboB,gBAAgB;IAChBlB,iBAAiB;IACjBlB,SAAS;IACTmB,SAAS;IACTC;EACF,CAAC;EAED,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEiB,KAAM;IAAA,UAAEf;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC9E,CAAC;AAAC,GAvDWD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}