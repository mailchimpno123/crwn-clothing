{"ast":null,"code":"var _jsxFileName = \"/Users/carbonara/Desktop/crwn-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useReducer } from 'react';\nimport { cereateAtion } from '../utils/redux/createAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nconst CART_ACTION_TYPES = {\n  ADD_ITEM: 'ADD_ITEM',\n  REMOVE_ITEM: 'REMOVE_ITEM',\n  CLEAR_ITEM: 'CLEAR_ITEM',\n  TOGGLE_CART: 'TOGGLE_CART'\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case CART_ACTION_TYPES.ADD_ITEM:\n      return {\n        ...state,\n        ...payload\n      };\n    case CART_ACTION_TYPES.REMOVE_ITEM:\n      return {\n        ...state,\n        ...payload\n      };\n    case CART_ACTION_TYPES.CLEAR_ITEM:\n      return {\n        ...state,\n        ...payload\n      };\n    case CART_ACTION_TYPES.TOGGLE_CART:\n      return {\n        ...state,\n        isCartOpen: payload\n      };\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [{\n    cartItems,\n    isCartOpen,\n    cartCount,\n    cartTotal\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n  const updateCartItemsReducer = newCartItems => {\n    const newCartCount = newCartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = newCartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    dispatch(CART_ACTION_TYPES.ADD_ITEM, {\n      cartItems: newCartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal\n    });\n  };\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n  const removeItemToCart = cartItemToRemove => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n  const setIsCartOpen = bool => {\n    dispatch(createAction(CART_ACTION_TYPES.TOGGLE_CART, bool));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"KMBiYUJn8nwY9dsxTP1OP3slwQ8=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useReducer","cereateAtion","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CART_ACTION_TYPES","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM","TOGGLE_CART","INITIAL_STATE","cartReducer","state","action","type","payload","Error","CartProvider","children","dispatch","updateCartItemsReducer","newCartItems","newCartCount","reduce","total","newCartTotal","price","removeItemToCart","bool","createAction","value"],"sources":["/Users/carbonara/Desktop/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect, useReducer } from 'react';\nimport {cereateAtion} from '../utils/redux/createAction';\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nconst CART_ACTION_TYPES = {\n  ADD_ITEM: 'ADD_ITEM',\n  REMOVE_ITEM: 'REMOVE_ITEM',\n  CLEAR_ITEM: 'CLEAR_ITEM',\n  TOGGLE_CART: 'TOGGLE_CART',\n};\n\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0,\n};\n\nconst cartReducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.ADD_ITEM:\n      return {\n        ...state,\n        ...payload,\n      };\n    case CART_ACTION_TYPES.REMOVE_ITEM:\n      return {\n        ...state,\n        ...payload,\n      };\n    case CART_ACTION_TYPES.CLEAR_ITEM:\n      return {\n        ...state,\n        ...payload,\n      };\n    case CART_ACTION_TYPES.TOGGLE_CART:\n      return {\n        ...state,\n        isCartOpen: payload,\n      };\n\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\n\n\nexport const CartProvider = ({ children }) => {\n  const [{cartItems, isCartOpen, cartCount, cartTotal}, dispatch] = \n    useReducer(cartReducer, INITIAL_STATE);\n\n  const updateCartItemsReducer = (newCartItems) => {\n    const newCartCount = newCartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n\n    const newCartTotal = newCartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n\n    dispatch (CART_ACTION_TYPES.ADD_ITEM, {\n        cartItems: newCartItems,\n        cartCount: newCartCount,\n        cartTotal: newCartTotal,\n      },\n    );\n  };\n\n  const addItemToCart = (productToAdd) => {\n    const newCartItems = (addCartItem(cartItems, productToAdd));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemToCart = (cartItemToRemove) => {\n    const newCartItems= (removeCartItem(cartItems, cartItemToRemove));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = (cartItemToClear) => {\n    const newCartItems= (clearCartItem(cartItems, cartItemToClear));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const setIsCartOpen = (bool) => {\n    dispatch(createAction(CART_ACTION_TYPES.TOGGLE_CART, bool));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}