{"ast":null,"code":"var _jsxFileName = \"/Users/carbonara/Desktop/crwn-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: true,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case 'TOGGLE_CART':\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        cartItems: addCartItem(state.cartItems, payload)\n      };\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        cartItems: removeCartItem(state.cartItems, payload)\n      };\n    case 'CLEAR_ITEM':\n      return {\n        ...state,\n        cartItems: clearCartItem(state.cartItems, payload)\n      };\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [{\n    cartItems,\n    isCartOpen,\n    cartCount,\n    cartTotal\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n  const updateCartItemsReducer = newCartItems => {\n    const newCartCount = newCartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = newCartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: {\n        cartItems: newCartItems,\n        cartCount: newCartCount,\n        cartTotal: newCartTotal\n      }\n    });\n  };\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n  const removeItemToCart = cartItemToRemove => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen: () => {},\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"KMBiYUJn8nwY9dsxTP1OP3slwQ8=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useReducer","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","INITIAL_STATE","cartReducer","state","action","type","payload","Error","CartProvider","children","dispatch","updateCartItemsReducer","newCartItems","newCartCount","reduce","total","newCartTotal","price","removeItemToCart","value"],"sources":["/Users/carbonara/Desktop/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect, useReducer } from 'react';\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: true,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0,\n};\n\nconst cartReducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'TOGGLE_CART':\n      return { ...state, isCartOpen: !state.isCartOpen };\n    case 'ADD_ITEM':\n      return { ...state, cartItems: addCartItem(state.cartItems, payload) };\n    case 'REMOVE_ITEM':\n      return { ...state, cartItems: removeCartItem(state.cartItems, payload) };\n    case 'CLEAR_ITEM':\n      return { ...state, cartItems: clearCartItem(state.cartItems, payload) };\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\n\n\nexport const CartProvider = ({ children }) => {\n  const [{cartItems, isCartOpen, cartCount, cartTotal}, dispatch] = \n    useReducer(cartReducer, INITIAL_STATE);\n\n  const updateCartItemsReducer = (newCartItems) => {\n    const newCartCount = newCartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n\n    const newCartTotal = newCartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n\n    dispatch ({\n      type: 'ADD_ITEM',\n      payload: {\n        cartItems: newCartItems,\n        cartCount: newCartCount,\n        cartTotal: newCartTotal,\n      },\n    });\n  };\n\n  const addItemToCart = (productToAdd) => {\n    const newCartItems = (addCartItem(cartItems, productToAdd));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemToCart = (cartItemToRemove) => {\n    const newCartItems= (removeCartItem(cartItems, cartItemToRemove));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = (cartItemToClear) => {\n    const newCartItems= (clearCartItem(cartItems, cartItemToClear));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen : () => {},\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}