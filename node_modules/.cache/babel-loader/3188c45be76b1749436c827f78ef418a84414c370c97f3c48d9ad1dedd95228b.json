{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { USER_ACTION_TYPES } from './user.types';\nimport { signInSuccess, signInFailed } from './user.action';\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup } from '../../utils/firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield call(signInWithGooglePopup);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalInformation) {\n  try {\n    const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalInformation);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onCheckUserSession), call(onGoogleSignInStart)]);\n}","map":{"version":3,"names":["takeLatest","put","all","call","USER_ACTION_TYPES","signInSuccess","signInFailed","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInWithGoogle","user","getSnapshotFromUserAuth","error","userAuth","additionalInformation","userSnapshot","id","data","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"sources":["/Users/carbonara/Desktop/crwn-clothing/src/store/user/user.saga.js"],"sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport { USER_ACTION_TYPES} from './user.types';\n\nimport { signInSuccess, signInFailed } from './user.action';\n\nimport { getCurrentUser, \n    createUserDocumentFromAuth, \n    signInWithGooglePopup \n} from '../../utils/firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield call(signInWithGooglePopup);\n        yield call(getSnapshotFromUserAuth, user);\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n}\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalInformation) {\n    try {\n        const userSnapshot = yield call(\n            createUserDocumentFromAuth, \n            userAuth, \n            additionalInformation\n        );\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield call(getCurrentUser);\n        if(!userAuth) return;\n        yield call(getSnapshotFromUserAuth, userAuth);\n    } catch (error) {\n        yield put(signInFailed(error));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* userSagas() {\n    yield all([call(onCheckUserSession), call(onGoogleSignInStart)]);\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAE/D,SAASC,iBAAiB,QAAO,cAAc;AAE/C,SAASC,aAAa,EAAEC,YAAY,QAAQ,eAAe;AAE3D,SAASC,cAAc,EACnBC,0BAA0B,EAC1BC,qBAAqB,QAClB,qCAAqC;AAE5C,OAAO,UAAUC,gBAAgB,GAAG;EAChC,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,IAAI,CAACM,qBAAqB,CAAC;IAClD,MAAMN,IAAI,CAACS,uBAAuB,EAAED,IAAI,CAAC;EAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMZ,GAAG,CAACK,YAAY,CAACO,KAAK,CAAC,CAAC;EAClC;AACJ;AAEA,OAAO,UAAUD,uBAAuB,CAACE,QAAQ,EAAEC,qBAAqB,EAAE;EACtE,IAAI;IACA,MAAMC,YAAY,GAAG,MAAMb,IAAI,CAC3BK,0BAA0B,EAC1BM,QAAQ,EACRC,qBAAqB,CACxB;IACD,MAAMd,GAAG,CAACI,aAAa,CAAC;MAAEY,EAAE,EAAED,YAAY,CAACC,EAAE;MAAE,GAAGD,YAAY,CAACE,IAAI;IAAG,CAAC,CAAC,CAAC;EAC7E,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,MAAMZ,GAAG,CAACK,YAAY,CAACO,KAAK,CAAC,CAAC;EAClC;AACJ;AAEA,OAAO,UAAUM,mBAAmB,GAAG;EACnC,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMX,IAAI,CAACI,cAAc,CAAC;IAC3C,IAAG,CAACO,QAAQ,EAAE;IACd,MAAMX,IAAI,CAACS,uBAAuB,EAAEE,QAAQ,CAAC;EACjD,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZ,MAAMZ,GAAG,CAACK,YAAY,CAACO,KAAK,CAAC,CAAC;EAClC;AACJ;AAEA,OAAO,UAAUO,mBAAmB,GAAG;EACnC,MAAMpB,UAAU,CAACI,iBAAiB,CAACiB,oBAAoB,EAAEX,gBAAgB,CAAC;AAC9E;AAEA,OAAO,UAAUY,kBAAkB,GAAG;EAClC,MAAMtB,UAAU,CAACI,iBAAiB,CAACmB,kBAAkB,EAAEJ,mBAAmB,CAAC;AAC/E;AAEA,OAAO,UAAUK,SAAS,GAAG;EACzB,MAAMtB,GAAG,CAAC,CAACC,IAAI,CAACmB,kBAAkB,CAAC,EAAEnB,IAAI,CAACiB,mBAAmB,CAAC,CAAC,CAAC;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}